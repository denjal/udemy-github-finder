{"ast":null,"code":"var _jsxFileName = \"/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/components/users/Search.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: ''\n    };\n\n    this.onChange = e => this.setState({\n      text: e.target.value\n    });\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.text === '') {\n        this.props.setAlert('Please enter something', 'light');\n      } else {\n        this.props.searchUsers(this.state.text);\n        this.setState({\n          text: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      showClear,\n      clearUsers\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Search Users...\",\n      value: this.state.text,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-dark btn-block\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), showClear && React.createElement(\"button\", {\n      className: \"btn btn-light btn-block\",\n      onClick: clearUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Clear\"));\n  }\n\n}\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/components/users/Search.js"],"names":["React","Component","PropTypes","Search","state","text","onChange","e","setState","target","value","onSubmit","preventDefault","props","setAlert","searchUsers","render","showClear","clearUsers","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD4B;;AAAA,SAWpCC,QAXoC,GAWzBC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAjB,KAAd,CAXoB;;AAAA,SAapCC,QAboC,GAazBJ,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACK,cAAF;;AACA,UAAI,KAAKR,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,aAAKQ,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACD,OAFD,MAEO;AACL,aAAKD,KAAL,CAAWE,WAAX,CAAuB,KAAKX,KAAL,CAAWC,IAAlC;AACA,aAAKG,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD;AACF,KArBmC;AAAA;;AAuBpCW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA4B,KAAKL,KAAvC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE,KAAKF,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,IAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKC,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,EAeGW,SAAS,IACR;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,CADF;AAuBD;;AAhDmC;AAAzBf,M,CAKJgB,S,GAAY;AACjBJ,EAAAA,WAAW,EAAEb,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEjBH,EAAAA,UAAU,EAAEhB,SAAS,CAACkB,IAAV,CAAeC,UAFV;AAGjBJ,EAAAA,SAAS,EAAEf,SAAS,CAACoB,IAAV,CAAeD;AAHT,C;AA8CrB,eAAelB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Search extends Component {\n  state = {\n    text: ''\n  };\n\n  static propTypes = {\n    searchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired\n  };\n\n  onChange = e => this.setState({ text: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.state.text === '') {\n      this.props.setAlert('Please enter something', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({ text: '' });\n    }\n  };\n\n  render() {\n    const { showClear, clearUsers } = this.props;\n    return (\n      <div>\n        <form className='form' onSubmit={this.onSubmit}>\n          <input\n            type='text'\n            name='text'\n            placeholder='Search Users...'\n            value={this.state.text}\n            onChange={this.onChange}\n          />\n          <input\n            type='submit'\n            className='btn btn-dark btn-block'\n            value='Search'\n          />\n        </form>\n        {showClear && (\n          <button className='btn btn-light btn-block' onClick={clearUsers}>\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}