{"ast":null,"code":"var _jsxFileName = \"/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport './components/layout/Navbar';\nimport About from './components/pages/About';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport GithubState from './context/github/GithubState';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n  /*   async componentDidMount() {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    this.setState({ users: res.data, loading: false });\n  } */\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return React.createElement(GithubState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    title: \"Github Finder\",\n    icon: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Search, {\n      setAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/App.js"],"names":["React","useState","Fragment","BrowserRouter","Router","Route","Switch","axios","About","Navbar","Users","User","Search","Alert","GithubState","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUser","username","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport './components/layout/Navbar';\nimport About from './components/pages/About';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\n\nimport GithubState from './context/github/GithubState';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  /*   async componentDidMount() {\n    this.setState({ loading: true });\n    const res = await axios.get(\n      `https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    this.setState({ users: res.data, loading: false });\n  } */\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return (\n    <GithubState>\n      <Router>\n        <div className='App'>\n          <Navbar title='Github Finder' icon='fab fa-github' />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search setAlert={showAlert} />\n                    <Users />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path='/user/:login'\n                render={props => (\n                  <User\n                    {...props}\n                    getUser={getUser}\n                    getUserRepos={getUserRepos}\n                    user={user}\n                    repos={repos}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}