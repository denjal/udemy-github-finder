{"ast":null,"code":"var _jsxFileName = \"/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/components/users/Users.js\";\nimport React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\n\nconst Users = ({\n  loading,\n  users\n}) => {\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  } else {}\n\n  return React.createElement(\"div\", {\n    style: userStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, users.map(user => React.createElement(UserItem, {\n    key: user.id,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nexport default Users;","map":{"version":3,"sources":["/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/components/users/Users.js"],"names":["React","UserItem","Spinner","Users","loading","users","userStyle","map","user","id","display","gridTemplateColumns","gridGap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AACpC,MAAID,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,CACN;;AAED,SACE;AAAK,IAAA,KAAK,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CAbD;;AAeA,MAAMF,SAAS,GAAG;AAChBI,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,mBAAmB,EAAE,gBAFL;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAMA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\n\nconst Users = ({ loading, users }) => {\n  if (loading) {\n    return <Spinner />;\n  } else {\n  }\n\n  return (\n    <div style={userStyle}>\n      {users.map(user => (\n        <UserItem key={user.id} user={user} />\n      ))}\n    </div>\n  );\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}