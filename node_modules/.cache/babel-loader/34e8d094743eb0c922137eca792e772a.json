{"ast":null,"code":"import React,{useContext}from'react';import UserItem from'./UserItem';import Spinner from'../layout/Spinner';import GithubContext from'../../context/github/githubContext';var Users=function Users(){var githubContext=useContext(GithubContext);var loading=githubContext.loading,users=githubContext.users;if(loading){return React.createElement(Spinner,null);}else{return React.createElement(\"div\",{style:userStyle},users.map(function(user){return React.createElement(UserItem,{key:user.id,user:user});}));}};var userStyle={display:'grid',gridTemplateColumns:'repeat(3, 1fr)',gridGap:'1rem'};export default Users;","map":{"version":3,"sources":["/Users/danielandersson/Desktop/udemy/react-front-to-back/github-finder/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","display","gridTemplateColumns","gridGap"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAMC,CAAAA,aAAa,CAAGL,UAAU,CAACG,aAAD,CAAhC,CADkB,GAGVG,CAAAA,OAHU,CAGSD,aAHT,CAGVC,OAHU,CAGDC,KAHC,CAGSF,aAHT,CAGDE,KAHC,CAKlB,GAAID,OAAJ,CAAa,CACX,MAAO,qBAAC,OAAD,MAAP,CACD,CAFD,IAEO,CACL,MACE,4BAAK,KAAK,CAAEE,SAAZ,EACGD,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,QACb,qBAAC,QAAD,EAAU,GAAG,CAAEA,IAAI,CAACC,EAApB,CAAwB,IAAI,CAAED,IAA9B,EADa,EAAd,CADH,CADF,CAOD,CACF,CAhBD,CAkBA,GAAMF,CAAAA,SAAS,CAAG,CAChBI,OAAO,CAAE,MADO,CAEhBC,mBAAmB,CAAE,gBAFL,CAGhBC,OAAO,CAAE,MAHO,CAAlB,CAMA,cAAeV,CAAAA,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n\n  const { loading, users } = githubContext;\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map(user => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}